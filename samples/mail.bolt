// Mail.bolt - Inbox and Outbox Rules.
//
// These rules support putting Messages in an Inbox (for another user)
// and making a record of all email sent in an outbox.
//
// Design goals:
//
// - Anyone can send a message to anybody by posting in the users inbox, as long as they have
//   the correct from field.
// - Cannot forge the from field of a message.
// - Cannot alter a message once created (it can only be deleted in-toto).
//
// Functionally similar rules to the corresponding rules defined in the Blaze Compiler:
// https://github.com/firebase/blaze_compiler/blob/master/examples/mail_example.yaml

path /users/{userid} {
  // Inbox
  /inbox/{msg} is Message {
    read() { isCurrentUser(userid) }
    write() { isNew(this) || isCurrentUser(userid) }
  }

  // Outbox
  /outbox/{msg} is Message {
    read() { isCurrentUser(userid) }
    write() { isCurrentUser(userid) }
  }
}

type Message {
  validate() { isNew(this) && isCurrentUser(this.from) }

  from: UserID,
  to: UserID,
  message: String,
}

type UserID extends String;

isNew(ref) { prior(ref) == null }

isCurrentUser(userid) { auth != null && auth.uid == userid }
