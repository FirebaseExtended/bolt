// Functionally similar rules to
// https://github.com/firebase/blaze_compiler/blob/master/examples/mail_example.yaml

type Message {
  from: string
  to: string
  message: string

  extensible(prop) { return false; }
}

path /users/$ownerid {
  read() { return isCurrentUser($ownerid); }
}

// The inbox is someone's incoming mail.
path /users/$ownerid/inbox/$msg {
  validate() { return this instanceof Message && isCurrentUser(this.from) && this.to == $ownerid; }

  // Anyone can add, owner can delete (no one can modify).
  write() { return data == null && isLoggedIn() || this == null && isCurrentUser($owerid); }
}

// The outbox is for recording what has been sent by a user.
path /users/$ownerid/outbox/$msg {
  validate() { return this instanceof Message && isCurrentUser(this.from); }

  // Owner can add or delete (not modify).
  write() { return isCurrentUser($ownerid) && (data == null || this == null); }
}

function isCurrentUser(userid) {
  return auth.username == userid;
}

function isLoggedIn() {
  return auth != null;
}